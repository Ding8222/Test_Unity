// Generated by sprotodump. DO NOT EDIT!
// source: ./proto/serverproto.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace ServerSprotoType { 
	public class character_info : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private string _name; // tag 0
		public string name {
			get { return _name; }
			set { base.has_field.set_field (0, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _tempid; // tag 1
		public Int64 tempid {
			get { return _tempid; }
			set { base.has_field.set_field (1, true); _tempid = value; }
		}
		public bool HasTempid {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _job; // tag 2
		public Int64 job {
			get { return _job; }
			set { base.has_field.set_field (2, true); _job = value; }
		}
		public bool HasJob {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _sex; // tag 3
		public Int64 sex {
			get { return _sex; }
			set { base.has_field.set_field (3, true); _sex = value; }
		}
		public bool HasSex {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _level; // tag 4
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (4, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (4); }
		}

		private character_pos _pos; // tag 5
		public character_pos pos {
			get { return _pos; }
			set { base.has_field.set_field (5, true); _pos = value; }
		}
		public bool HasPos {
			get { return base.has_field.has_field (5); }
		}

		public character_info () : base(max_field_count) {}

		public character_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.name = base.deserialize.read_string ();
					break;
				case 1:
					this.tempid = base.deserialize.read_integer ();
					break;
				case 2:
					this.job = base.deserialize.read_integer ();
					break;
				case 3:
					this.sex = base.deserialize.read_integer ();
					break;
				case 4:
					this.level = base.deserialize.read_integer ();
					break;
				case 5:
					this.pos = base.deserialize.read_obj<character_pos> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.name, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.tempid, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.job, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.sex, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.level, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_obj (this.pos, 5);
			}

			return base.serialize.close ();
		}
	}


	public class character_move : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _tempid; // tag 0
		public Int64 tempid {
			get { return _tempid; }
			set { base.has_field.set_field (0, true); _tempid = value; }
		}
		public bool HasTempid {
			get { return base.has_field.has_field (0); }
		}

		private character_pos _pos; // tag 1
		public character_pos pos {
			get { return _pos; }
			set { base.has_field.set_field (1, true); _pos = value; }
		}
		public bool HasPos {
			get { return base.has_field.has_field (1); }
		}

		public character_move () : base(max_field_count) {}

		public character_move (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.tempid = base.deserialize.read_integer ();
					break;
				case 1:
					this.pos = base.deserialize.read_obj<character_pos> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.tempid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_obj (this.pos, 1);
			}

			return base.serialize.close ();
		}
	}


	public class character_pos : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _x; // tag 0
		public Int64 x {
			get { return _x; }
			set { base.has_field.set_field (0, true); _x = value; }
		}
		public bool HasX {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _y; // tag 1
		public Int64 y {
			get { return _y; }
			set { base.has_field.set_field (1, true); _y = value; }
		}
		public bool HasY {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _z; // tag 2
		public Int64 z {
			get { return _z; }
			set { base.has_field.set_field (2, true); _z = value; }
		}
		public bool HasZ {
			get { return base.has_field.has_field (2); }
		}

		public character_pos () : base(max_field_count) {}

		public character_pos (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.x = base.deserialize.read_integer ();
					break;
				case 1:
					this.y = base.deserialize.read_integer ();
					break;
				case 2:
					this.z = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.x, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.y, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.z, 2);
			}

			return base.serialize.close ();
		}
	}


	public class characterleave {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Int64> _tempid; // tag 0
			public List<Int64> tempid {
				get { return _tempid; }
				set { base.has_field.set_field (0, true); _tempid = value; }
			}
			public bool HasTempid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.tempid = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.tempid, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class characterupdate {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private character_info _info; // tag 0
			public character_info info {
				get { return _info; }
				set { base.has_field.set_field (0, true); _info = value; }
			}
			public bool HasInfo {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.info = base.deserialize.read_obj<character_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.info, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class delayresult {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _time; // tag 0
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (0, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.time, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class delaytest {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _time; // tag 0
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (0, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.time, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _time; // tag 0
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (0, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.time, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class moveto {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<character_move> _move; // tag 0
			public List<character_move> move {
				get { return _move; }
				set { base.has_field.set_field (0, true); _move = value; }
			}
			public bool HasMove {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.move = base.deserialize.read_obj_list<character_move> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.move, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		private string _ud; // tag 2
		public string ud {
			get { return _ud; }
			set { base.has_field.set_field (2, true); _ud = value; }
		}
		public bool HasUd {
			get { return base.has_field.has_field (2); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				case 2:
					this.ud = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.ud, 2);
			}

			return base.serialize.close ();
		}
	}


	public class subid {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _result; // tag 0
			public string result {
				get { return _result; }
				set { base.has_field.set_field (0, true); _result = value; }
			}
			public bool HasResult {
				get { return base.has_field.has_field (0); }
			}

			private string _gateip; // tag 1
			public string gateip {
				get { return _gateip; }
				set { base.has_field.set_field (1, true); _gateip = value; }
			}
			public bool HasGateip {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _gateport; // tag 2
			public Int64 gateport {
				get { return _gateport; }
				set { base.has_field.set_field (2, true); _gateport = value; }
			}
			public bool HasGateport {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.result = base.deserialize.read_string ();
						break;
					case 1:
						this.gateip = base.deserialize.read_string ();
						break;
					case 2:
						this.gateport = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.result, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.gateip, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.gateport, 2);
				}

				return base.serialize.close ();
			}
		}


	}


}


public class ServerProtocol : ProtocolBase {
	public static  ServerProtocol Instance = new ServerProtocol();
	private ServerProtocol() {
		Protocol.SetProtocol<characterleave> (characterleave.Tag);
		Protocol.SetRequest<ServerSprotoType.characterleave.request> (characterleave.Tag);

		Protocol.SetProtocol<characterupdate> (characterupdate.Tag);
		Protocol.SetRequest<ServerSprotoType.characterupdate.request> (characterupdate.Tag);

		Protocol.SetProtocol<delayresult> (delayresult.Tag);
		Protocol.SetRequest<ServerSprotoType.delayresult.request> (delayresult.Tag);

		Protocol.SetProtocol<delaytest> (delaytest.Tag);
		Protocol.SetRequest<ServerSprotoType.delaytest.request> (delaytest.Tag);
		Protocol.SetResponse<ServerSprotoType.delaytest.response> (delaytest.Tag);

		Protocol.SetProtocol<heartbeat> (heartbeat.Tag);

		Protocol.SetProtocol<moveto> (moveto.Tag);
		Protocol.SetRequest<ServerSprotoType.moveto.request> (moveto.Tag);

		Protocol.SetProtocol<subid> (subid.Tag);
		Protocol.SetRequest<ServerSprotoType.subid.request> (subid.Tag);

	}

	public class characterleave {
		public const int Tag = 4;
	}

	public class characterupdate {
		public const int Tag = 3;
	}

	public class delayresult {
		public const int Tag = 6;
	}

	public class delaytest {
		public const int Tag = 5;
	}

	public class heartbeat {
		public const int Tag = 1;
	}

	public class moveto {
		public const int Tag = 7;
	}

	public class subid {
		public const int Tag = 2;
	}

}